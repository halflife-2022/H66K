#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: x86_64 LEDE

on:
  workflow_dispatch:
#  schedule:
#    - cron: 0 19 * * *

env:
  SOURCE_URL: https://github.com/coolsnowwolf/lede
  SOURCE_BRANCH: master
  APPS_CONFIG: apps.config
  DIY_P1_SH: others/diy-part1.sh
  DIY_P2_SH: others/diy-part2.sh
  UPLOAD_RELEASE: true
  FIRMWARE_TAG: x86_64
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
      
    steps:
    - name: 检查
      uses: actions/checkout@main

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        ( sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential clang flex g++ gawk gcc-multilib gettext \
        git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev swig libpython3-dev aria2 jq subversion qemu-utils ccache rename libelf-dev
        sudo -E apt-get -qq purge azure-cli ghc* zulu* hhvm llvm* firefox powershell openjdk* dotnet* google* mysql* php* android*
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean ) &
        sudo timedatectl set-timezone "$TZ"
        
    - name: 记录编译时间信息
      id: date
      run: |
        echo "nametime=$(date +'%Y.%m.%d')" >> $GITHUB_ENV
        echo "releasetag=$(date +'%Y.%m.%d-%H%M')" >> $GITHUB_ENV
        echo "packagetime=$(date +'%Y/%m/%d %H:%M')" >> $GITHUB_ENV
        VERSION="$(echo "${{github.event.action}}" | grep -Eo " [0-9.]+" | sed -e 's/ //')" || true
        [ "$VERSION" ] && echo "VERSION=$VERSION" >> $GITHUB_ENV || echo "VERSION=$(date +'%m.%d')" >> $GITHUB_ENV
        
    - name: 克隆源码
      id: clone
      run: |
        df -hT $GITHUB_WORKSPACE
        git clone $SOURCE_URL -b $SOURCE_BRANCH openwrt
        cd openwrt
        export VERSION_INFO=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "VERSION_INFO=$VERSION_INFO" >> $GITHUB_ENV
        echo "VERSION_INFO=$(echo $VERSION_INFO)" >> $GITHUB_OUTPUT
  
    - name: 更新 & 安装 feeds
      run: |
        chmod +x $GITHUB_WORKSPACE/$DIY_P1_SH
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 自定义配置
      run: |
        chmod +x $GITHUB_WORKSPACE/$DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        cp -f $GITHUB_WORKSPACE/others/default-settings package/lean/default-settings/files/zzz-default-settings
        cp -f $GITHUB_WORKSPACE/configs/${{ env.FIRMWARE_TAG }}.config .config
        cat $GITHUB_WORKSPACE/configs/$APPS_CONFIG >> .config && make defconfig

    - name: 下载包文件
      id: package
      run: |
        cd openwrt
        make download -j$(nproc)
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      id: generate
      run: |
        [ -e files ] && mv files openwrt/files
        cd openwrt
        echo -e "$(($(nproc)+1)) thread compile"
        make -j$(($(nproc)+1)) || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 检查空间使用情况
      if: (!cancelled())
      run: df -hT

    - name: 整理文件
      id: organize
      if: steps.generate.outputs.status == 'success'
      run: |
        mkdir firmware
        mv -f openwrt/bin/targets/*/*/{*combined-efi*,*sysupgrade*} ./firmware/ 2>/dev/null || true
        cp openwrt/.config  ./firmware/${{ env.FIRMWARE_TAG }}.config
        cd firmware      
        md5=$((md5sum *squashfs-sysupgrade* || md5sum *squashfs-combined-efi*) | awk '{print $1}') 2>/dev/null
        echo $md5 >> MD5.txt
        rename -v "s/^openwrt/${{ env.VERSION }}-openwrt/" * || true
        rm -rf sha256sums        
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        
    - name: 生成发布标签
      id: tag
      if: steps.generate.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true'
      run: |
        echo -e "这是 ${{ env.FIRMWARE_TAG }} 平台使用的 OpenWrt 固件" >> release.txt
        echo -e "默认 IP：192.168.10.1 默认密码：无" >> release.txt
        echo -e "当前使用版本:【编译前的最后一次[源码](https://github.com/coolsnowwolf/lede)更新记录】" >> release.txt
        echo -e "${{ env.VERSION_INFO }}:\n" >> release.txt
        touch release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 发布固件
      if: steps.tag.outputs.status == 'success'
      uses: softprops/action-gh-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
        files: "${{ env.FIRMWARE }}/*"
        name: R${{ env.nametime }} ${{ env.FIRMWARE_TAG }}
        tag_name: ${{ env.releasetag }}
        body_path: release.txt
        
    - name: 删除工作流
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: 删除旧版本固件
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true'
      with:
        keep_latest: 5
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
